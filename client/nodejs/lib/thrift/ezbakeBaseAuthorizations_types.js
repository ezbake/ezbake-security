/*   Copyright (C) 2013-2014 Computer Sciences Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. */

//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;

var ttypes = module.exports = {};
if (typeof ezbake === 'undefined') {
  ezbake = {};
}
if (typeof ezbake.base === 'undefined') {
  ezbake.base = {};
}
if (typeof ezbake.base.thrift === 'undefined') {
  ezbake.base.thrift = {};
}
ezbake.base.thrift.Authorizations = module.exports.Authorizations = function(args) {
  this.formalAuthorizations = null;
  this.externalCommunityAuthorizations = null;
  this.platformObjectAuthorizations = null;
  if (args) {
    if (args.formalAuthorizations !== undefined) {
      this.formalAuthorizations = args.formalAuthorizations;
    }
    if (args.externalCommunityAuthorizations !== undefined) {
      this.externalCommunityAuthorizations = args.externalCommunityAuthorizations;
    }
    if (args.platformObjectAuthorizations !== undefined) {
      this.platformObjectAuthorizations = args.platformObjectAuthorizations;
    }
  }
};
ezbake.base.thrift.Authorizations.prototype = {};
ezbake.base.thrift.Authorizations.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.SET) {
        var _size0 = 0;
        var _rtmp34;
        this.formalAuthorizations = [];
        var _etype3 = 0;
        _rtmp34 = input.readSetBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = input.readString();
          this.formalAuthorizations.push(elem6);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.SET) {
        var _size7 = 0;
        var _rtmp311;
        this.externalCommunityAuthorizations = [];
        var _etype10 = 0;
        _rtmp311 = input.readSetBegin();
        _etype10 = _rtmp311.etype;
        _size7 = _rtmp311.size;
        for (var _i12 = 0; _i12 < _size7; ++_i12)
        {
          var elem13 = null;
          elem13 = input.readString();
          this.externalCommunityAuthorizations.push(elem13);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.SET) {
        var _size14 = 0;
        var _rtmp318;
        this.platformObjectAuthorizations = [];
        var _etype17 = 0;
        _rtmp318 = input.readSetBegin();
        _etype17 = _rtmp318.etype;
        _size14 = _rtmp318.size;
        for (var _i19 = 0; _i19 < _size14; ++_i19)
        {
          var elem20 = null;
          elem20 = input.readI64();
          this.platformObjectAuthorizations.push(elem20);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ezbake.base.thrift.Authorizations.prototype.write = function(output) {
  output.writeStructBegin('Authorizations');
  if (this.formalAuthorizations !== null && this.formalAuthorizations !== undefined) {
    output.writeFieldBegin('formalAuthorizations', Thrift.Type.SET, 1);
    output.writeSetBegin(Thrift.Type.STRING, this.formalAuthorizations.length);
    for (var iter21 in this.formalAuthorizations)
    {
      if (this.formalAuthorizations.hasOwnProperty(iter21))
      {
        iter21 = this.formalAuthorizations[iter21];
        output.writeString(iter21);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.externalCommunityAuthorizations !== null && this.externalCommunityAuthorizations !== undefined) {
    output.writeFieldBegin('externalCommunityAuthorizations', Thrift.Type.SET, 2);
    output.writeSetBegin(Thrift.Type.STRING, this.externalCommunityAuthorizations.length);
    for (var iter22 in this.externalCommunityAuthorizations)
    {
      if (this.externalCommunityAuthorizations.hasOwnProperty(iter22))
      {
        iter22 = this.externalCommunityAuthorizations[iter22];
        output.writeString(iter22);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  if (this.platformObjectAuthorizations !== null && this.platformObjectAuthorizations !== undefined) {
    output.writeFieldBegin('platformObjectAuthorizations', Thrift.Type.SET, 3);
    output.writeSetBegin(Thrift.Type.I64, this.platformObjectAuthorizations.length);
    for (var iter23 in this.platformObjectAuthorizations)
    {
      if (this.platformObjectAuthorizations.hasOwnProperty(iter23))
      {
        iter23 = this.platformObjectAuthorizations[iter23];
        output.writeI64(iter23);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

